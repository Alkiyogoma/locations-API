generator client {
  provider = "prisma-client-js"
  previewFeatures = ["fullTextSearch"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Countries {
  id        Int         @id @default(autoincrement())
  iso       String      @db.Char(2)
  name      String
  nicename  String
  iso3      String?     @db.Char(3)
  numcode   Int?
  phonecode Int
  districts Districts[] @relation("countriesTodistricts")
  regions   Regions[]
  wards     Wards[]     @relation("countriesTowards")

  @@map("countries")
}

model Districts {
  districtName    String? @map("district_name")
  districtCode    Int        @id @map("district_code")
  propertiesCount Int?      @map("properties_count")
  regionId        Int?      @map("region_id")
  regions          Regions?   @relation(fields: [regionId], references: [regionCode])
  wards            Wards[]
  general_locations_id            Int?
  general              General?   @relation("districtsTogeneral", fields: [general_locations_id], references: [id])
  country_id           Int?
  countries            Countries? @relation("countriesTodistricts", fields: [country_id], references: [id])

  @@map("districts")
}

model Places {
  id               Int     @id @default(autoincrement())
  placeName       String? @map("place_name")
  propertiesCount Int?    @map("properties_count")
  wardId          Int    @map("ward_id")
  ward            Wards   @relation(fields: [wardId], references: [wardCode])
  general_locations_id       Int?
  general         General? @relation("generalToplaces", fields: [general_locations_id], references: [id])
  country_id           Int?

  @@map("places")
}

model Regions {
  regionName        String?     @map("region_name")
  regionCode        Int         @id   @map("region_code")
  propertiesCount   Int?        @map("properties_count")
  countryId         Int?        @map("country_id")
  countries         Countries?  @relation(fields: [countryId], references: [id])
  districts         Districts[]
  general_locations_id         Int?        @map("general_locations_id")
  general           General?    @relation("generalToregions", fields: [general_locations_id], references: [id])

  @@map("regions")
}

model Wards {
  wardName        String?     @map("ward_name")
  wardCode        Int        @id @map("ward_code")
  propertiesCount Int?        @map("properties_count")
  districtId      Int?        @map("district_id")
  districts       Districts? @relation(fields: [districtId], references: [districtCode])
  places          Places[]
  general_locations_id         Int?
  general              General?   @relation("generalTowards", fields: [general_locations_id], references: [id])
  country_id           Int?
  countries            Countries? @relation("countriesTowards", fields: [country_id], references: [id])

  @@map("wards")
}

model General {
  id              Int         @id
  countryId       Int         @map("country_id") 
  district        String
  districtCode    Int         
  region          String
  regionCode      Int
  ward            String
  wardCode        Int
  places          String?
  street          String?
  districts              Districts[] @relation("districtsTogeneral")
  places_generalToplaces Places[]    @relation("generalToplaces")
  regions                Regions[]   @relation("generalToregions")
  wards                  Wards[]     @relation("generalTowards")

  @@map("general")
}
